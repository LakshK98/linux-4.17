This fork introduces enhancements to the Linux 4.17 kernel, enabling the counting of physically and virtually contiguous pages.
Additionally, it facilitates adjusting the number of pages allocated per page fault. 
These modifications aim to optimize allocation efficiency by allowing applications to tune the allocation per fault, thereby reducing context-switching costs.

Usage:

Once the modifed kernel has been loaded, a custom sys call needs to be called before an application modifies allocations.
To call the syscall, add the following function definition. 

```
#define __NR_identity 333

long identity_syscall(unsigned long count)
{
    return syscall(__NR_identity, count);
}
```
call pass count of allocation per fault to identity_syscall before execution of your application and pass 0 right after execution is complete.

The number of contiguous segments of memory used is tracked by maintaining a red-black tree within the kernel. The count and size of these segments are logged using printk. To view these make sure to run
```
dmesg -n 5
```


